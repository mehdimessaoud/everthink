{"id":"gql/mutation.js","dependencies":[{"name":"C:\\Users\\Asma\\Desktop\\Newfolder(3)\\package.json","includedInParent":true,"mtime":1615473915844},{"name":"@apollo/client","loc":{"line":1,"column":18},"parent":"C:\\Users\\Asma\\Desktop\\Newfolder(3)\\src\\gql\\mutation.js","resolved":"C:\\Users\\Asma\\Desktop\\Newfolder(3)\\node_modules\\@apollo\\client\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EDIT_NOTE = void 0;\n\nvar _client = require(\"@apollo/client\");\n\nvar _templateObject;\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar EDIT_NOTE = (0, _client.gql)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\nmutation updateNote($id: ID! , $content: String!){\\n    updataNote(id:$id,content: $content){\\n        id\\n        content\\n        createdAt\\n        favoriteCount\\n        favoritedBy{\\n            id\\n            username\\n        }\\n        author{\\n            username\\n            id\\n        }\\n\\n    }\\n}\\n\\n\"])));\nexports.EDIT_NOTE = EDIT_NOTE;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"gql/mutation.js","original":{"line":1,"column":0}},{"generated":{"line":14,"column":0},"source":"gql/mutation.js","original":{"line":3,"column":0}},{"name":"EDIT_NOTE","generated":{"line":14,"column":4},"source":"gql/mutation.js","original":{"line":3,"column":6}},{"generated":{"line":14,"column":13},"source":"gql/mutation.js","original":{"line":3,"column":15}},{"name":"gql","generated":{"line":14,"column":20},"source":"gql/mutation.js","original":{"line":3,"column":18}},{"generated":{"line":14,"column":31},"source":"gql/mutation.js","original":{"line":3,"column":15}},{"generated":{"line":14,"column":420},"source":"gql/mutation.js","original":{"line":3,"column":0}}],"sources":{"gql/mutation.js":"import {gql} from '@apollo/client';\r\n\r\nconst EDIT_NOTE = gql`\r\nmutation updateNote($id: ID! , $content: String!){\r\n    updataNote(id:$id,content: $content){\r\n        id\r\n        content\r\n        createdAt\r\n        favoriteCount\r\n        favoritedBy{\r\n            id\r\n            username\r\n        }\r\n        author{\r\n            username\r\n            id\r\n        }\r\n\r\n    }\r\n}\r\n\r\n`;\r\n\r\nexport {EDIT_NOTE};\r\n"},"lineCount":null}},"error":null,"hash":"24daba63ebbd7978b519ea420541cfea","cacheData":{"env":{}}}