{"id":"gql/query.js","dependencies":[{"name":"C:\\Users\\Asma\\Desktop\\Newfolder(3)\\package.json","includedInParent":true,"mtime":1615473915844},{"name":"@apollo/client","loc":{"line":2,"column":28},"parent":"C:\\Users\\Asma\\Desktop\\Newfolder(3)\\src\\gql\\query.js","resolved":"C:\\Users\\Asma\\Desktop\\Newfolder(3)\\node_modules\\@apollo\\client\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GET_ME = exports.GET_MY_NOTES = exports.IS_LOGGED_IN = exports.GET_NOTE = exports.GET_NOTES = void 0;\n\nvar _client = require(\"@apollo/client\");\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar GET_MY_NOTES = (0, _client.gql)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\nquery me {\\n        me {\\n            id\\n            username\\n            notes {\\n                id\\n                createdAt\\n                content\\n                favoriteCount\\n                    author {\\n                        username\\n                        id\\n                        avatar\\n                    }\\n                }\\n            }\\n    }\\n\"])));\nexports.GET_MY_NOTES = GET_MY_NOTES;\nvar GET_ME = (0, _client.gql)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\nquery me {\\nme {\\nid\\nfavorites {\\nid\\n}\\n}\\n}\\n\"])));\nexports.GET_ME = GET_ME;\nvar GET_NOTE = (0, _client.gql)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    query note($id: ID!){\\n        note(id: $id){\\n            id\\n            createdAt\\n            content\\n            favoriteCount\\n            author{\\n                username\\n                id\\n                avatar\\n            }\\n        }\\n    }\\n\\n\"])));\nexports.GET_NOTE = GET_NOTE;\nvar NEW_NOTE = (0, _client.gql)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\nmutation newNote($content: String!){\\n    newNote(content: $content){\\n        id\\n        content\\n        createdAt\\n        favoriteCount\\n        favoritedBy{\\n            id\\n            username            \\n        }author{\\n            username\\n            id\\n        }\\n    }\\n}\\n\"])));\nvar GET_NOTES = (0, _client.gql)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\nquery noteFeed($cursor: String){\\n    noteFeed(cursor:  $cursor){\\n        cursor\\n        hasNextPage\\n        notes{\\n            id\\n            createdAt\\n            content\\n            favoriteCount\\n            author{\\n                username\\n                id\\n                avatar            \\n            }\\n        }\\n    }\\n}\\n\"])));\nexports.GET_NOTES = GET_NOTES;\nvar IS_LOGGED_IN = (0, _client.gql)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"    \\n{\\n    isLoggedIn @client\\n}\\n\"])));\nexports.IS_LOGGED_IN = IS_LOGGED_IN;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"gql/query.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"gql/query.js","original":{"line":3,"column":0}},{"name":"GET_MY_NOTES","generated":{"line":14,"column":4},"source":"gql/query.js","original":{"line":3,"column":6}},{"generated":{"line":14,"column":16},"source":"gql/query.js","original":{"line":3,"column":18}},{"name":"gql","generated":{"line":14,"column":23},"source":"gql/query.js","original":{"line":3,"column":20}},{"generated":{"line":14,"column":34},"source":"gql/query.js","original":{"line":3,"column":18}},{"generated":{"line":14,"column":482},"source":"gql/query.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"gql/query.js","original":{"line":23,"column":0}},{"name":"GET_ME","generated":{"line":16,"column":4},"source":"gql/query.js","original":{"line":23,"column":6}},{"generated":{"line":16,"column":10},"source":"gql/query.js","original":{"line":23,"column":12}},{"name":"gql","generated":{"line":16,"column":17},"source":"gql/query.js","original":{"line":23,"column":15}},{"generated":{"line":16,"column":28},"source":"gql/query.js","original":{"line":23,"column":12}},{"generated":{"line":16,"column":150},"source":"gql/query.js","original":{"line":23,"column":0}},{"generated":{"line":18,"column":0},"source":"gql/query.js","original":{"line":34,"column":0}},{"name":"GET_NOTE","generated":{"line":18,"column":4},"source":"gql/query.js","original":{"line":34,"column":6}},{"generated":{"line":18,"column":12},"source":"gql/query.js","original":{"line":34,"column":14}},{"name":"gql","generated":{"line":18,"column":19},"source":"gql/query.js","original":{"line":34,"column":16}},{"generated":{"line":18,"column":30},"source":"gql/query.js","original":{"line":34,"column":14}},{"generated":{"line":18,"column":368},"source":"gql/query.js","original":{"line":34,"column":0}},{"generated":{"line":20,"column":0},"source":"gql/query.js","original":{"line":50,"column":0}},{"name":"NEW_NOTE","generated":{"line":20,"column":4},"source":"gql/query.js","original":{"line":50,"column":6}},{"generated":{"line":20,"column":12},"source":"gql/query.js","original":{"line":50,"column":14}},{"name":"gql","generated":{"line":20,"column":19},"source":"gql/query.js","original":{"line":50,"column":16}},{"generated":{"line":20,"column":30},"source":"gql/query.js","original":{"line":50,"column":14}},{"generated":{"line":20,"column":395},"source":"gql/query.js","original":{"line":50,"column":0}},{"generated":{"line":21,"column":0},"source":"gql/query.js","original":{"line":68,"column":0}},{"name":"GET_NOTES","generated":{"line":21,"column":4},"source":"gql/query.js","original":{"line":68,"column":6}},{"generated":{"line":21,"column":13},"source":"gql/query.js","original":{"line":68,"column":15}},{"name":"gql","generated":{"line":21,"column":20},"source":"gql/query.js","original":{"line":68,"column":16}},{"generated":{"line":21,"column":31},"source":"gql/query.js","original":{"line":68,"column":15}},{"generated":{"line":21,"column":451},"source":"gql/query.js","original":{"line":68,"column":0}},{"generated":{"line":23,"column":0},"source":"gql/query.js","original":{"line":88,"column":0}},{"name":"IS_LOGGED_IN","generated":{"line":23,"column":4},"source":"gql/query.js","original":{"line":88,"column":6}},{"generated":{"line":23,"column":16},"source":"gql/query.js","original":{"line":88,"column":18}},{"name":"gql","generated":{"line":23,"column":23},"source":"gql/query.js","original":{"line":88,"column":20}},{"generated":{"line":23,"column":34},"source":"gql/query.js","original":{"line":88,"column":18}},{"generated":{"line":23,"column":142},"source":"gql/query.js","original":{"line":88,"column":0}}],"sources":{"gql/query.js":"\r\nimport {useQuery, gql} from '@apollo/client';\r\nconst GET_MY_NOTES= gql`\r\nquery me {\r\n        me {\r\n            id\r\n            username\r\n            notes {\r\n                id\r\n                createdAt\r\n                content\r\n                favoriteCount\r\n                    author {\r\n                        username\r\n                        id\r\n                        avatar\r\n                    }\r\n                }\r\n            }\r\n    }\r\n`;\r\n\r\nconst GET_ME = gql`\r\nquery me {\r\nme {\r\nid\r\nfavorites {\r\nid\r\n}\r\n}\r\n}\r\n`;\r\n\r\nconst GET_NOTE= gql`\r\n    query note($id: ID!){\r\n        note(id: $id){\r\n            id\r\n            createdAt\r\n            content\r\n            favoriteCount\r\n            author{\r\n                username\r\n                id\r\n                avatar\r\n            }\r\n        }\r\n    }\r\n\r\n`;\r\nconst NEW_NOTE= gql`\r\nmutation newNote($content: String!){\r\n    newNote(content: $content){\r\n        id\r\n        content\r\n        createdAt\r\n        favoriteCount\r\n        favoritedBy{\r\n            id\r\n            username            \r\n        }author{\r\n            username\r\n            id\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nconst GET_NOTES=gql`\r\nquery noteFeed($cursor: String){\r\n    noteFeed(cursor:  $cursor){\r\n        cursor\r\n        hasNextPage\r\n        notes{\r\n            id\r\n            createdAt\r\n            content\r\n            favoriteCount\r\n            author{\r\n                username\r\n                id\r\n                avatar            \r\n            }\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nconst IS_LOGGED_IN= gql`    \r\n{\r\n    isLoggedIn @client\r\n}\r\n`;\r\n\r\nexport {GET_NOTES, GET_NOTE, IS_LOGGED_IN, GET_MY_NOTES,GET_ME}"},"lineCount":null}},"error":null,"hash":"c491a0a6c6bdaaff4bce21f91b14146d","cacheData":{"env":{}}}